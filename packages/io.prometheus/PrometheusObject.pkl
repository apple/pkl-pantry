//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
/// Base module for Prometheus configuration objects
@ModuleInfo { minPklVersion = "0.25.0" }
abstract module io.prometheus.PrometheusObject

typealias MetricNameFormat = String(matches(Regex(#"[a-zA-Z_:][a-zA-Z0-9_:]*"#)))

typealias LabelNameFormat = String(matches(Regex(#"[a-zA-Z_][a-zA-Z0-9_]*"#)))

typealias Labels = Mapping<LabelNameFormat, String|Number|Boolean>

typealias Scheme = *"http"|"https"

local function convertDuration(dur: Duration) =
  if (dur.unit == "min") dur.value.toString() + "m"
  else if (dur.unit == "ns") convertDuration(dur.toUnit("ms"))
  else if (dur.unit == "us") convertDuration(dur.toUnit("ms"))
  else dur.value.toString() + dur.unit

output {
  renderer = new YamlRenderer {
    converters {
      [Duration] = (dur: Duration) -> convertDuration(dur)
    }
  }
}
