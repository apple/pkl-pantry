//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
/// A token representing a name.
///
/// Identifiers get surrounded by backticks (`) if they conflict with a keyword, or if
/// they don't match the normal identifier pattern.
@Unlisted
module pkl.experimental.syntax.IdentifierNode

extends "Node.pkl"

/// The raw value of the identifier.
///
/// It's not possible to encode a backtick into an identifier.
value: String(!contains("`"))

local keywords: Set<String> = new Listing {
  "abstract"
  "amends"
  "as"
  "case"
  "class"
  "const"
  "delete"
  "else"
  "extends"
  "external"
  "false"
  "final"
  "fixed"
  "for"
  "function"
  "hidden"
  "if"
  "import"
  "in"
  "is"
  "let"
  "local"
  "module"
  "new"
  "nothing"
  "null"
  "open"
  "out"
  "outer"
  "override"
  "protected"
  "read"
  "record"
  "super"
  "switch"
  "this"
  "throw"
  "trace"
  "true"
  "typealias"
  "unknown"
  "vararg"
  "when"
}.toSet()

function render(_) =
  if (value.matches(Regex(#"[A-Za-z$_][A-Za-z\d$_]*"#)) && !keywords.contains(value))
    value
  else
    "`" + value + "`"
