//===----------------------------------------------------------------------===//
// Copyright Â© 2025 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
module k8s.contrib.crd.internal.SchemaGenerator

import "@syntax/ModuleNode.pkl"
import "@syntax/TypeNode.pkl"
import "@syntax/ExpressionNode.pkl"
import "@syntax/ObjectBodyNode.pkl"
import "ModuleGenerator.pkl"

baseApiGroup: String

crds: Listing<ModuleGenerator.CRD>

fixed moduleNode: ModuleNode = new {
  declaration {
    moduleHeader {
      name {
        parts {
          for (part in baseApiGroup.split(".").reverse()) {
            new { value = part }
          }
          new { value = "k8sSchema" }
        }
      }
    }
  }
  properties {
    new {
      name { value = "resourceTemplates" }
      typeAnnotation {
        type = new TypeNode.DeclaredTypeNode {
          name { parts { new { value = "Mapping" } } }
          typeArguments {
            new TypeNode.DeclaredTypeNode {
              name { parts { new { value = "String" } } }
            }
            new TypeNode.DeclaredTypeNode {
              name { parts { new { value = "Mapping" } } }
              typeArguments {
                new TypeNode.DeclaredTypeNode {
                  name { parts { new { value = "String" } } }
                }
                new TypeNode.BuiltInTypeNode { type = "unknown" }
              }
            }
          }
        }
      }
      docComment {
        value = """
          Resource modules keyed by `kind` and `apiVersion`.

          Note: Declared template type is [unknown] instead of `K8sResource`
          to delay loading a template until it is accessed.
          """
      }
      defaultValue = new ExpressionNode.ObjectExpressionNode {
        body {
          members {
            for (crd in crds) {
              new ObjectBodyNode.EntryMemberNode {
                keyValue = new ExpressionNode.StringExpressionNode {
                  stringParts { crd.spec.names.kind }
                }
                body {
                  members {
                    for (version in crd.spec.versions) {
                      new ObjectBodyNode.EntryMemberNode {
                        keyValue = new ExpressionNode.StringExpressionNode {
                          stringParts { "\(crd.spec.group)/\(version.name)" }
                        }
                        propertyValue = new ExpressionNode.ImportExpressionNode {
                          value = let (groupComponent = crd.spec.group.replaceFirst(Regex(#"(^|\.)\#(baseApiGroup)$"#), ""))
                              if (groupComponent.isEmpty) "\(version.name)/\(crd.spec.names.kind)"
                              else "\(groupComponent.split(".").reverse().join("/"))/\(version.name)/\(crd.spec.names.kind)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
