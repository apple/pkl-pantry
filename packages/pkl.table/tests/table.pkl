//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
module pkl.table.tests.table

amends "pkl:test"

import "../table.pkl"

local data = new Listing {
  new { alpha = "123"; beta = 123; gamma = 123.h; delta = List("1", "2", "3") }
  new { alpha = "456"; beta = 456; gamma = 456.h; delta = List("4", "5", "6") }
  new { alpha = "789loooooong"; beta = 789; gamma = 789.h; delta = List("7", "8", "9") }
}

examples {
  ["simple"] {
    new table.TableRenderer {
      columns { "alpha"; "beta"; "gamma" }
    }.renderDocument(data)
  }
  ["fancy column"] {
    new table.TableRenderer {
      style {
        nullPlaceholder = "<null>"
      }
      columns {
        (table.Column("alpha")) {
          title = "a"
          align = "right"
        }
        (table.Column("beta")) {
          title = "b"
        }
        (table.Column("gamma")) {
          title = "c"
        }
        "unknown"
      }
    }.renderDocument(data)
  }
  ["coverter"] {
    new table.TableRenderer {
      columns { table.Column("alpha"); table.Column("beta"); table.Column("gamma"); table.Column("delta") }
      converters {
        [Duration] = (it) -> it.toUnit("s")
        ["delta"] = (it) -> it.join(",")
      }
    }.renderDocument(data)
  }
  ["boxDrawingLight"] {
    new table.TableRenderer {
      style = table.boxDrawingLightStyle
      columns { table.Column("alpha"); table.Column("beta"); table.Column("gamma") }
    }.renderDocument(data)
  }
  ["boxDrawingHeavy"] {
    new table.TableRenderer {
      style = table.boxDrawingHeavyStyle
      columns { table.Column("alpha"); table.Column("beta"); table.Column("gamma") }
    }.renderDocument(data)
  }
  ["markdown"] {
    new table.TableRenderer {
      style = table.markdownStyle
      columns { table.Column("alpha"); table.Column("beta"); table.Column("gamma") }
    }.renderDocument(data)
  }
}
