//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
/// Contact information for the exposed API.
module org.openapis.v3.SecurityScheme

import "OAuthFlows.pkl"

typealias SecuritySchemeType = "apiKey"|"http"|"oauth2"|"openIdConnect"

/// The type of the security scheme.
type: SecuritySchemeType

/// A short description for security scheme.
///
/// CommonMark syntax MAY be used for rich text representation.
@SourceCode { language = "Markdown" }
description: String?

/// The name of the header, query or cookie parameter to be used.
name: String

/// The location of the API key.
`in`: "query"|"header"|"cookie"

scheme: String((this == "bearer").implies(bearerFormat != null))

/// A hint to the client to identify how the bearer token is formatted.
///
/// Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation
/// purposes.
bearerFormat: String(type == "http")?

/// An object containing configuration information for the flow types supported.
flows: OAuthFlows?((type == "oauth2").implies(this != null))

/// OpenId Connect URL to discover OAuth2 configuration values.
///
/// This MUST be in the form of a URL.
openIdConnectUrl: Uri?((type == "openIdConnect").implies(this != null))
